{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/Engine/BinaryTree.ts","webpack:///./src/scripts/Engine/BinaryTreeNode.ts","webpack:///./src/scripts/EntryPoint.ts","webpack:///./src/scripts/Helpers/Random.ts","webpack:///./src/styles/main.scss"],"names":[],"mappings":"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","file":"./scripts/script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import BinaryTreeNode from \"./BinaryTreeNode\";\r\n\r\nclass BinaryTree<T> {\r\n    public firstItem: BinaryTreeNode<T>;\r\n    private comparableValue: (T: T) => number;\r\n\r\n    public constructor(argument: T, func: (T: T) => number) {\r\n        this.comparableValue = func;\r\n        this.firstItem = new BinaryTreeNode<T>(argument, null, this.comparableValue(argument));\r\n    }\r\n\r\n    public add(argument: T) {\r\n        let parentNode: BinaryTreeNode<T> = this.firstItem;\r\n        let argumentComparableValue = this.comparableValue(argument);\r\n        while (true) {\r\n            if (parentNode.getKey() > argumentComparableValue) {\r\n                if (parentNode.getLeft() == null) {\r\n                    parentNode.setLeft(new BinaryTreeNode<T>(argument, parentNode, argumentComparableValue));\r\n                    break;\r\n                }\r\n                else {\r\n                    parentNode = parentNode.getLeft();\r\n                }\r\n            }\r\n            else if (parentNode.getKey() < argumentComparableValue) {\r\n                if (parentNode.getRight() == null) {\r\n                    parentNode.setRight(new BinaryTreeNode<T>(argument, parentNode, argumentComparableValue));\r\n                    break;\r\n                }\r\n                else {\r\n                    parentNode = parentNode.getRight();\r\n                }\r\n            } else {\r\n                parentNode.addValue(argument);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public minimum(): BinaryTreeNode<T> {\r\n        return this.minimumOf(this.firstItem);\r\n    }\r\n\r\n    public minimumOf(node: BinaryTreeNode<T>): BinaryTreeNode<T> {\r\n        if (node.getLeft() == null)\r\n            return node;\r\n        return this.minimumOf(node.getLeft());\r\n    }\r\n\r\n    public next(node: BinaryTreeNode<T>) {\r\n        if (node.getRight() != null)\r\n            return this.minimumOf(node.getRight());\r\n        let parent = node.getParent();\r\n        while (parent != null && node == parent.getRight()) {\r\n            node = parent;\r\n            parent = node.getParent();\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    public isExist(arg: T) : boolean {\r\n        return this.search(arg) != null;\r\n    }\r\n\r\n    public search(arg: T): BinaryTreeNode<T> {\r\n        return this.recursiveSearch(this.firstItem, this.comparableValue(arg));\r\n    }\r\n\r\n    private recursiveSearch(node: BinaryTreeNode<T>, key: number): BinaryTreeNode<T> {\r\n        let nodeKey = node.getKey();\r\n        if (node == null || nodeKey == key)\r\n            return node;\r\n        if (key < nodeKey)\r\n            return this.recursiveSearch(node.getLeft(), key);\r\n        else\r\n            return this.recursiveSearch(node.getRight(), key);\r\n    }\r\n\r\n    public removeNodeElement(arg: T) {\r\n        let node = this.search(arg);\r\n        if (node.getValue().length > 1) {\r\n            node.removeFromValue(arg);\r\n            return\r\n        }\r\n        this.removeNode(node);\r\n    }\r\n\r\n    public removeNode(arg: BinaryTreeNode<T>) {\r\n        // let argValue = arg.getValue());\r\n        if (arg.getValue().length > 1) {\r\n\r\n        }\r\n        let parentNode = arg.getParent();\r\n        if (arg.getLeft() == null && arg.getRight() == null) {\r\n            if (parentNode.getRight() == arg)\r\n                parentNode.setRight(null);\r\n            if (parentNode.getLeft() == arg)\r\n                parentNode.setLeft(null);\r\n        } else if (arg.getLeft() == null || arg.getRight() == null) {\r\n            if (arg.getLeft() == null) {\r\n                if (parentNode.getLeft() == arg) {\r\n                    parentNode.setLeft(arg.getRight());\r\n                } else {\r\n                    parentNode.setRight(arg.getRight());\r\n                }\r\n                arg.getRight().setParent(parentNode);\r\n            } else {\r\n                if (parentNode.getLeft() == arg) {\r\n                    parentNode.setLeft(arg.getLeft());\r\n                } else {\r\n                    parentNode.setRight(arg.getLeft());\r\n                }\r\n                arg.getLeft().setParent(parentNode);\r\n            }\r\n        } else {\r\n            let successor = this.next(arg);\r\n            arg.setValue(successor.getValue());\r\n            arg.setKey(successor.getKey());\r\n            if (successor.getParent().getLeft() == successor) {\r\n                successor.getParent().setLeft(successor.getRight());\r\n                if (successor.getRight() != null) {\r\n                    successor.getRight().setParent(successor.getParent());\r\n                }\r\n            } else {\r\n                successor.getParent().setRight(successor.getLeft());\r\n                if (successor.getLeft() != null) {\r\n                    successor.getRight().setParent(successor.getParent());\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public print() {\r\n        let nodesArray: BinaryTreeNode<T>[] = [];\r\n        nodesArray.push(this.firstItem);\r\n        let consoleRow: string = \"\";\r\n        while (nodesArray.length > 0) {\r\n            consoleRow = \"\";\r\n            let newNodesArray: BinaryTreeNode<T>[] = [];\r\n            for (let i: number = 0; i < nodesArray.length; i++) {\r\n                consoleRow += nodesArray[i].getKey().toString();\r\n                consoleRow += \" [\";\r\n                for (let value of nodesArray[i].getValue()) {\r\n                    consoleRow += value.toString() + \" \";\r\n                }\r\n                consoleRow += \"]\";\r\n                consoleRow += \"   \";\r\n                if (nodesArray[i].getLeft() != null)\r\n                    newNodesArray.push(nodesArray[i].getLeft());\r\n                if (nodesArray[i].getRight() != null)\r\n                    newNodesArray.push(nodesArray[i].getRight());\r\n            }\r\n            console.log(consoleRow);\r\n            nodesArray = newNodesArray;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BinaryTree;","class BinaryTreeNode<T> {\r\n    private key: number;\r\n    private value: T[];\r\n    private parent: BinaryTreeNode<T>;\r\n    private left: BinaryTreeNode<T>;\r\n    private right: BinaryTreeNode<T>;\r\n\r\n    public constructor(argument: T, parent: BinaryTreeNode<T>, key: number) {\r\n        this.value = [argument];\r\n        this.parent = parent;\r\n        this.key = key;\r\n    }\r\n\r\n    public removeFromValue(arg: T) {\r\n        let index = this.value.findIndex((value)=> {\r\n            return value.toString() == arg.toString();\r\n        });\r\n        // let index = this.value.indexOf(arg);\r\n        console.log(index);\r\n        if (index != undefined)\r\n            this.value.splice(index, 1);\r\n    }\r\n\r\n    public getParent(): BinaryTreeNode<T> {\r\n        return this.parent;\r\n    }\r\n\r\n    public  getKey(): number {\r\n        return this.key;\r\n    }\r\n\r\n    public setParent(parent: BinaryTreeNode<T>) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    public setLeft(argument: BinaryTreeNode<T>) {\r\n        this.left = argument;\r\n    }\r\n\r\n    public setRight(argument: BinaryTreeNode<T>) {\r\n        this.right = argument;\r\n    }\r\n\r\n    public getRight(): BinaryTreeNode<T> {\r\n        return this.right;\r\n    }\r\n\r\n    public getLeft(): BinaryTreeNode<T> {\r\n        return this.left;\r\n    }\r\n\r\n    public getValue(): T[] {\r\n        return this.value;\r\n    }\r\n\r\n    public setValue(value: T[]) {\r\n        this.value = value;\r\n    }\r\n\r\n    public setKey(value: number) {\r\n        this.key = value;\r\n    }\r\n\r\n    public addValue(arg: T) {\r\n        this.value.push(arg);\r\n    }\r\n}\r\n\r\nexport default BinaryTreeNode;","// import Field from './Environment/Field';\r\n// import Game from './Engine/Game';\r\n// import MapCoordinates from \"./Engine/MapCoordinates\";\r\n// import PathFinder from \"./Engine/PathFinder\";\r\n// import StopWatch from \"./Helpers/StopWatch\";\r\n// import Sleep from \"./Helpers/Sleep\";\r\n//\r\n//\r\n// let size: number = 50;\r\n//\r\n// let field = new Field(size);\r\n// field.randomize();\r\n// let game = new Game(field);\r\n// game.start();\r\n//\r\n// game.field.cells[0][0] = 0;\r\n// game.field.cells[49][49] = 0;\r\n//\r\n// let pathFinder = new PathFinder(game.field, game);\r\n// let stopWatch: StopWatch = new StopWatch();\r\n// // Sleep.sleep(1000);\r\n// stopWatch.Start();\r\n// let path = pathFinder.findPath(new MapCoordinates(0, 0), new MapCoordinates(size - 1, size - 1));\r\n// stopWatch.end();\r\n// console.log(\"bench result: \" + stopWatch.getResult());\r\n//\r\n// game.field.showNodes(pathFinder.getCheckedNodes());\r\n// if (path != null) {\r\n//     console.log(\"path length: \" + path.length);\r\n//     game.field.addPath(path);\r\n// }\r\n\r\n\r\nimport BinaryTree from \"./Engine/BinaryTree\";\r\nimport Random from \"./Helpers/Random\";\r\n\r\nclass Test {\r\n    public value: number;\r\n    public rValue: number;\r\n\r\n    public constructor(asd: number) {\r\n        this.value = asd;\r\n        this.rValue = Random.next(0, 20);\r\n    }\r\n\r\n    public set(number: number) {\r\n        this.rValue = number;\r\n    }\r\n\r\n    public toString() {\r\n        return this.rValue.toString();\r\n    }\r\n}\r\n\r\nlet main1 = new Test(8);\r\nmain1.set(12);\r\nlet binaryTree = new BinaryTree(main1, (test) => {\r\n    return test.value;\r\n});\r\n\r\nlet willDelete1 = new Test(2);\r\nwillDelete1.set(1337);\r\nlet willDelete2 = new Test(4);\r\nwillDelete2.set(133);\r\n\r\nbinaryTree.add(willDelete2);\r\nbinaryTree.add(new Test(12));\r\nbinaryTree.add(new Test(2));\r\nbinaryTree.add(new Test(6));\r\nbinaryTree.add(new Test(10));\r\nbinaryTree.add(new Test(14));\r\nbinaryTree.add(new Test(2));\r\nbinaryTree.add(willDelete1);\r\nbinaryTree.add(new Test(2));\r\nbinaryTree.add(new Test(2));\r\nbinaryTree.add(new Test(6));\r\n\r\nbinaryTree.print();\r\n\r\nbinaryTree.removeNodeElement(main1);\r\n\r\nbinaryTree.print();","class Random {\r\n    public static next(min:number, max:number) {\r\n        return Math.round(Math.random() * (max - min)) + min;\r\n    }\r\n}\r\n\r\nexport default Random;","// removed by extract-text-webpack-plugin"],"sourceRoot":""}
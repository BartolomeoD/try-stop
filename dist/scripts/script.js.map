{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/DataStructure/ArrayBinaryTree/ArrayBinaryTree.ts","webpack:///./src/scripts/DataStructure/ArrayBinaryTree/ArrayBinaryTreeNode.ts","webpack:///./src/scripts/Engine/ControlManager.ts","webpack:///./src/scripts/Engine/Game.ts","webpack:///./src/scripts/Engine/MapCoordinates.ts","webpack:///./src/scripts/Engine/PathFinder.ts","webpack:///./src/scripts/Engine/PathNode.ts","webpack:///./src/scripts/EntryPoint.ts","webpack:///./src/scripts/Environment/Field.ts","webpack:///./src/scripts/Environment/GameObjectCollection.ts","webpack:///./src/scripts/GameObjects/Box.ts","webpack:///./src/scripts/GameObjects/DeadMan.ts","webpack:///./src/scripts/GameObjects/Enemy.ts","webpack:///./src/scripts/GameObjects/Player.ts","webpack:///./src/scripts/GlobalVariables.ts","webpack:///./src/scripts/Helpers/Random.ts","webpack:///./src/styles/main.scss"],"names":[],"mappings":"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","file":"./scripts/script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ArrayBinaryTreeNode from \"./ArrayBinaryTreeNode\";\r\n\r\nclass ArrayBinaryTree<T>{\r\n    public firstItem: ArrayBinaryTreeNode<T>;\r\n    private comparableValue: (T: T) => number;\r\n\r\n    public constructor(argument: T, func: (T: T) => number) {\r\n        this.comparableValue = func;\r\n        if (argument != null)\r\n            this.firstItem = new ArrayBinaryTreeNode<T>(argument, null, this.comparableValue(argument));\r\n    }\r\n\r\n    public add(argument: T) {\r\n        let argumentComparableValue = this.comparableValue(argument);\r\n        if (this.firstItem == null || this.firstItem == undefined) {\r\n            this.firstItem = new ArrayBinaryTreeNode<T>(argument, null, argumentComparableValue);\r\n            return;\r\n        }\r\n        let parentNode: ArrayBinaryTreeNode<T> = this.firstItem;\r\n        while (true) {\r\n            if (parentNode.getKey() > argumentComparableValue) {\r\n                if (parentNode.getLeft() == null) {\r\n                    parentNode.setLeft(new ArrayBinaryTreeNode<T>(argument, parentNode, argumentComparableValue));\r\n                    break;\r\n                }\r\n                else {\r\n                    parentNode = parentNode.getLeft();\r\n                }\r\n            }\r\n            else if (parentNode.getKey() < argumentComparableValue) {\r\n                if (parentNode.getRight() == null) {\r\n                    parentNode.setRight(new ArrayBinaryTreeNode<T>(argument, parentNode, argumentComparableValue));\r\n                    break;\r\n                }\r\n                else {\r\n                    parentNode = parentNode.getRight();\r\n                }\r\n            } else {\r\n                parentNode.addValue(argument);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private arrayOfElements: T[];\r\n\r\n    public toArray(): T[] {\r\n        this.arrayOfElements = [];\r\n        this.inOrder(this.firstItem);\r\n        return this.arrayOfElements;\r\n    }\r\n\r\n    private inOrder(node: ArrayBinaryTreeNode<T>) {\r\n        if (node != null && node != undefined) {\r\n            this.inOrder(node.getLeft());\r\n            this.arrayOfElements = this.arrayOfElements.concat(node.getValue());\r\n            this.inOrder(node.getRight());\r\n        }\r\n    }\r\n\r\n    public minimum(): ArrayBinaryTreeNode<T> {\r\n        return this.minimumOf(this.firstItem);\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.firstItem == null;\r\n    }\r\n\r\n    public minimumOf(node: ArrayBinaryTreeNode<T>): ArrayBinaryTreeNode<T> {\r\n        if (node.getLeft() == null)\r\n            return node;\r\n        return this.minimumOf(node.getLeft());\r\n    }\r\n\r\n    public next(node: ArrayBinaryTreeNode<T>) {\r\n        if (node.getRight() != null)\r\n            return this.minimumOf(node.getRight());\r\n        let parent = node.getParent();\r\n        while (parent != null && node == parent.getRight()) {\r\n            node = parent;\r\n            parent = node.getParent();\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    public search(arg: T): ArrayBinaryTreeNode<T> {\r\n        return this.recursiveSearch(this.firstItem, this.comparableValue(arg));\r\n    }\r\n\r\n    public searchItem(arg: T, func: (T: T) => boolean): T {\r\n        let node = this.search(arg);\r\n        if (node == null)\r\n            return null;\r\n        let items = node.getValue();\r\n        return items.find(func);\r\n    }\r\n\r\n    public searchByKey(key: number): T {\r\n        let node = this.recursiveSearch(this.firstItem, key);\r\n        if (node == null)\r\n            return null;\r\n        let items = node.getValue();\r\n    }\r\n\r\n    private recursiveSearch(node: ArrayBinaryTreeNode<T>, key: number): ArrayBinaryTreeNode<T> {\r\n        if (node == null)\r\n            return null;\r\n        let nodeKey = node.getKey();\r\n        if (nodeKey == key)\r\n            return node;\r\n        if (key < nodeKey)\r\n            return this.recursiveSearch(node.getLeft(), key);\r\n        else\r\n            return this.recursiveSearch(node.getRight(), key);\r\n    }\r\n\r\n\r\n    public removeNodeElement(arg: T) {\r\n        let node = this.search(arg);\r\n        if (node.getValue().length > 1) {\r\n            node.removeFromValue(arg);\r\n            return\r\n        }\r\n        this.removeNode(node);\r\n    }\r\n\r\n    public removeNode(arg: ArrayBinaryTreeNode<T>) {\r\n        let parentNode = arg.getParent();\r\n        if (parentNode == null) {\r\n            let nextRoot = arg.getRight();\r\n            this.firstItem = nextRoot;\r\n            if (nextRoot != null)\r\n                nextRoot.setParent(null);\r\n        }\r\n        else if (arg.getLeft() == null && arg.getRight() == null) {\r\n            if (parentNode == null) {\r\n                this.firstItem = null;\r\n            }\r\n            if (parentNode.getRight() == arg)\r\n                parentNode.setRight(null);\r\n            if (parentNode.getLeft() == arg)\r\n                parentNode.setLeft(null);\r\n        } else if (arg.getLeft() == null || arg.getRight() == null) {\r\n            if (arg.getLeft() == null) {\r\n                if (parentNode.getLeft() == arg) {\r\n                    parentNode.setLeft(arg.getRight());\r\n                } else {\r\n                    parentNode.setRight(arg.getRight());\r\n                }\r\n                arg.getRight().setParent(parentNode);\r\n            } else {\r\n                if (parentNode.getLeft() == arg) {\r\n                    parentNode.setLeft(arg.getLeft());\r\n                } else {\r\n                    parentNode.setRight(arg.getLeft());\r\n                }\r\n                arg.getLeft().setParent(parentNode);\r\n            }\r\n        } else {\r\n            let successor = this.next(arg);\r\n            arg.setValue(successor.getValue());\r\n            arg.setKey(successor.getKey());\r\n            if (successor.getParent().getLeft() == successor) {\r\n                successor.getParent().setLeft(successor.getRight());\r\n                if (successor.getRight() != null) {\r\n                    successor.getRight().setParent(successor.getParent());\r\n                }\r\n            } else {\r\n                successor.getParent().setRight(successor.getLeft());\r\n                if (successor.getLeft() != null) {\r\n                    successor.getRight().setParent(successor.getParent());\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public print() {\r\n        let nodesArray: ArrayBinaryTreeNode<T>[] = [];\r\n        nodesArray.push(this.firstItem);\r\n        let consoleRow: string = \"\";\r\n        while (nodesArray.length > 0) {\r\n            consoleRow = \"\";\r\n            let newNodesArray: ArrayBinaryTreeNode<T>[] = [];\r\n            for (let i: number = 0; i < nodesArray.length; i++) {\r\n                consoleRow += nodesArray[i].getKey().toString();\r\n                consoleRow += \" [\";\r\n                for (let value of nodesArray[i].getValue()) {\r\n                    consoleRow += value.toString() + \" \";\r\n                }\r\n                consoleRow += \"]\";\r\n                consoleRow += \"   \";\r\n                if (nodesArray[i].getLeft() != null)\r\n                    newNodesArray.push(nodesArray[i].getLeft());\r\n                if (nodesArray[i].getRight() != null)\r\n                    newNodesArray.push(nodesArray[i].getRight());\r\n            }\r\n            console.log(consoleRow);\r\n            nodesArray = newNodesArray;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ArrayBinaryTree;","class ArrayBinaryTreeNode<T> {\r\n    private key: number;\r\n    private value: T[];\r\n    private parent: ArrayBinaryTreeNode<T>;\r\n    private left: ArrayBinaryTreeNode<T>;\r\n    private right: ArrayBinaryTreeNode<T>;\r\n\r\n    public constructor(argument: T, parent: ArrayBinaryTreeNode<T>, key: number) {\r\n        this.value = [argument];\r\n        this.parent = parent;\r\n        this.key = key;\r\n    }\r\n\r\n    public removeFromValue(arg: T) {\r\n        let index = this.value.findIndex((value)=> {\r\n            return value.toString() == arg.toString();\r\n        });\r\n        if (index != undefined)\r\n            this.value.splice(index, 1);\r\n    }\r\n\r\n    public getParent(): ArrayBinaryTreeNode<T> {\r\n        return this.parent;\r\n    }\r\n\r\n    public  getKey(): number {\r\n        return this.key;\r\n    }\r\n\r\n    public setParent(parent: ArrayBinaryTreeNode<T>) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    public setLeft(argument: ArrayBinaryTreeNode<T>) {\r\n        this.left = argument;\r\n    }\r\n\r\n    public setRight(argument: ArrayBinaryTreeNode<T>) {\r\n        this.right = argument;\r\n    }\r\n\r\n    public getRight(): ArrayBinaryTreeNode<T> {\r\n        return this.right;\r\n    }\r\n\r\n    public getLeft(): ArrayBinaryTreeNode<T> {\r\n        return this.left;\r\n    }\r\n\r\n    public getValue(): T[] {\r\n        return this.value;\r\n    }\r\n\r\n    public setValue(value: T[]) {\r\n        this.value = value;\r\n    }\r\n\r\n    public setKey(value: number) {\r\n        this.key = value;\r\n    }\r\n\r\n    public addValue(arg: T) {\r\n        this.value.push(arg);\r\n    }\r\n}\r\n\r\nexport default ArrayBinaryTreeNode;","import Player from \"../GameObjects/Player\";\r\nimport {TickInMiliseconds} from \"../GlobalVariables\";\r\n\r\nclass ControlManager {\r\n\r\n\r\n    protected isDisabled: boolean;\r\n    private player: Player;\r\n\r\n    constructor(player: Player) {\r\n        this.player = player;\r\n        this.isDisabled = false;\r\n    }\r\n\r\n    public cacthKey(event: KeyboardEvent) {\r\n        if (!this.isDisabled) {\r\n            this.disableTemproary();\r\n            switch (event.code) {\r\n                case \"ArrowLeft\":\r\n                    this.player.moveLeft();\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    this.player.moveRight();\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    this.player.moveBottom();\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    this.player.moveUp();\r\n                    break;\r\n            }\r\n        } else {\r\n            console.log(\"disabled\");\r\n        }\r\n    }\r\n\r\n    private disableTemproary() {\r\n        this.isDisabled = true;\r\n        setTimeout(() => {\r\n            this.isDisabled = false;\r\n        },TickInMiliseconds);\r\n    }\r\n}\r\n\r\nexport default ControlManager;","import Field from \"../Environment/Field\";\r\n\r\nclass Game {\r\n    public field: Field;\r\n\r\n    public constructor(field: Field) {\r\n        this.field = field;\r\n    }\r\n\r\n    public start() {\r\n        this.field.render();\r\n        setInterval(this.update.bind(this), 16);\r\n    }\r\n\r\n    public update() {\r\n        this.field.render();\r\n    }\r\n}\r\n\r\nexport default Game;","class MapCoordinates {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public constructor (x: number, y:number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public toString() {\r\n        return this.x.toString() + \",\" + this.y.toString();\r\n    }\r\n}\r\n\r\nexport default MapCoordinates;","import PathNode from \"./PathNode\";\r\nimport Field from \"../Environment/Field\";\r\nimport MapCoordinates from \"./MapCoordinates\";\r\nimport ArrayBinaryTree from \"../DataStructure/ArrayBinaryTree/ArrayBinaryTree\";\r\nimport Enemy from \"../GameObjects/Enemy\";\r\n\r\nclass PathFinder {\r\n    private checkedNodes: ArrayBinaryTree<PathNode>;\r\n    private nodesToCheck: ArrayBinaryTree<PathNode>;\r\n    private field: Field;\r\n\r\n    public constructor(field: Field) {\r\n        this.field = field;\r\n    }\r\n\r\n    public getCheckedNodes() {\r\n        return this.checkedNodes;\r\n    }\r\n\r\n    public findPath(from: MapCoordinates, to: MapCoordinates, isIgnoreEnemy: boolean = true) {\r\n        let startNode = new PathNode(from, 0, null, to);\r\n\r\n        this.nodesToCheck = new ArrayBinaryTree<PathNode>(startNode, (node1) => {\r\n            return node1.getFullPath();\r\n        });\r\n        this.checkedNodes = new ArrayBinaryTree<PathNode>(null, (node1) => {\r\n            return node1.getHeuristicDistanceToGoal();\r\n        });\r\n\r\n        while (!this.nodesToCheck.isEmpty()) {\r\n            let currentNode = this.nodesToCheck.minimum().getValue()[0];\r\n\r\n            if (currentNode.getCoordinates().toString() == to.toString())\r\n                return this.getResultPath(currentNode);\r\n\r\n            this.nodesToCheck.removeNodeElement(currentNode);\r\n            this.checkedNodes.add(currentNode);\r\n\r\n\r\n            for (let neighbourNode of this.getNeighbors(currentNode, to, isIgnoreEnemy)) {\r\n                if (this.checkedNodes.searchItem(neighbourNode, (value) => {\r\n                    return value.getCoordinates().toString() == neighbourNode.getCoordinates().toString();\r\n                })) {\r\n                    continue;\r\n                }\r\n\r\n                let processedNode = this.nodesToCheck.searchItem(neighbourNode, (value) => {\r\n                    return value.getCoordinates().toString() == neighbourNode.getCoordinates().toString();\r\n                });\r\n\r\n                if (processedNode == null) {\r\n                    this.nodesToCheck.add(neighbourNode);\r\n                } else {\r\n                    if (processedNode.getDistanceFromStart() > neighbourNode.getDistanceFromStart()) {\r\n                        processedNode.setCameFrom(currentNode);\r\n                        processedNode.setDistanceFromStart(currentNode.getDistanceFromStart());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(\"not found\");\r\n        return null;\r\n    }\r\n\r\n    public getNeighbors(node: PathNode, to: MapCoordinates, isIgnoreEnemy: boolean): PathNode[] {\r\n        let pathNodesCoordinates: MapCoordinates[] = [];\r\n        let nodeCoordinates = node.getCoordinates();\r\n\r\n        pathNodesCoordinates.push(new MapCoordinates(nodeCoordinates.x, nodeCoordinates.y + 1));\r\n        pathNodesCoordinates.push(new MapCoordinates(nodeCoordinates.x + 1, nodeCoordinates.y));\r\n        pathNodesCoordinates.push(new MapCoordinates(nodeCoordinates.x, nodeCoordinates.y - 1));\r\n        pathNodesCoordinates.push(new MapCoordinates(nodeCoordinates.x - 1, nodeCoordinates.y));\r\n\r\n        let pathNodes: PathNode[] = [];\r\n\r\n        for (let coords of pathNodesCoordinates) {\r\n            if (coords.x < 0 || coords.x >= this.field.size) {\r\n                continue;\r\n            }\r\n            if (coords.y < 0 || coords.y >= this.field.size) {\r\n                continue;\r\n            }\r\n            let objInCoords = this.field.getObjectByCoordinates(coords);\r\n            if (objInCoords != null) {\r\n                if (isIgnoreEnemy && !objInCoords.isImpenetrable)\r\n                    continue;\r\n\r\n                if (!isIgnoreEnemy && (!objInCoords.isImpenetrable || objInCoords instanceof Enemy))\r\n                    continue;\r\n            }\r\n\r\n            pathNodes.push(\r\n                new PathNode(coords, node.getDistanceFromStart() + 1, node, to)\r\n            );\r\n        }\r\n\r\n        return pathNodes;\r\n    }\r\n\r\n    private getResultPath(node: PathNode): MapCoordinates[] {\r\n        let result: MapCoordinates[] = [];\r\n        let currentNode = node;\r\n        while (currentNode != null) {\r\n            result.push(currentNode.getCoordinates());\r\n            currentNode = currentNode.getCamefrom();\r\n        }\r\n        result.reverse();\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default PathFinder;","import MapCoordinates from \"./MapCoordinates\";\r\n\r\nclass PathNode {\r\n    private distanceFromStart: number;\r\n    private coordinates: MapCoordinates;\r\n    private cameFrom: PathNode;\r\n    private heuristicDistanceToGoal: number;\r\n\r\n    constructor(coordinates: MapCoordinates, distanceFromStart: number,\r\n                cameFrom: PathNode, goal: MapCoordinates) {\r\n        this.coordinates = coordinates;\r\n        this.distanceFromStart = distanceFromStart;\r\n        this.cameFrom = cameFrom;\r\n        this.heuristicDistanceToGoal = this.getHeuristicDistanceTo(goal);\r\n    }\r\n\r\n    public setCameFrom(cameFrom: PathNode) {\r\n        this.cameFrom = cameFrom;\r\n    }\r\n\r\n    public setDistanceFromStart(distance: number) {\r\n        this.distanceFromStart = distance;\r\n    }\r\n\r\n    public getHeuristicDistanceToGoal(): number {\r\n        return this.heuristicDistanceToGoal;\r\n    }\r\n\r\n    private getHeuristicDistanceTo(coordinates: MapCoordinates): number {\r\n        let distanceToCoordinates =\r\n            Math.abs(coordinates.x - this.coordinates.x) +\r\n            Math.abs(coordinates.y - this.coordinates.y);\r\n        return distanceToCoordinates;\r\n    }\r\n\r\n    public getCoordinates(): MapCoordinates {\r\n        return this.coordinates;\r\n    }\r\n\r\n    public getDistanceFromStart(): number {\r\n        return this.distanceFromStart;\r\n    }\r\n\r\n    public getCamefrom(): PathNode {\r\n        return this.cameFrom;\r\n    }\r\n\r\n    public getFullPath() {\r\n        return this.getHeuristicDistanceToGoal() + this.distanceFromStart;\r\n    }\r\n\r\n    public toString() {\r\n        return this.getCoordinates().toString() + \" distanceFromStart \" + this.distanceFromStart.toString();\r\n    }\r\n}\r\n\r\nexport default PathNode;","import Field from './Environment/Field';\r\nimport Game from './Engine/Game';\r\nimport Enemy from \"./GameObjects/Enemy\";\r\nimport MapCoordinates from \"./Engine/MapCoordinates\";\r\nimport ControlManager from \"./Engine/ControlManager\";\r\nimport Player from \"./GameObjects/Player\";\r\nimport {TickInMiliseconds} from \"./GlobalVariables\";\r\n\r\nwindow.onload = () => {\r\n    let size: number = 30;\r\n\r\n    let field = new Field(size);\r\n    field.randomize();\r\n    let game = new Game(field);\r\n    game.start();\r\n\r\n    let startPoint = new MapCoordinates(0, 0);\r\n    let endPoint = new MapCoordinates(size - 1, size - 1);\r\n\r\n    game.field.deleteObjectByCoordinates(startPoint);\r\n    game.field.deleteObjectByCoordinates(endPoint);\r\n\r\n    let player = new Player(endPoint, field);\r\n    game.field.gameObjects.add(player);\r\n\r\n    let controlManager = new ControlManager(player);\r\n\r\n    window.onkeydown = (e: KeyboardEvent) => {\r\n        controlManager.cacthKey(e);\r\n    };\r\n    let skip = 0;\r\n    let curr = 0;\r\n    let max = 1;\r\n    let creator = setInterval(() => {\r\n        if (curr < max) {\r\n            let enemy = new Enemy(startPoint, field);\r\n            game.field.gameObjects.add(enemy);\r\n            enemy.follow(player);\r\n            curr++;\r\n        } else {\r\n            if (skip > max) {\r\n                curr = 0;\r\n                max++;\r\n            }\r\n            skip++;\r\n        }\r\n    }, TickInMiliseconds * 10);\r\n};\r\n","import Random from \"../Helpers/Random\";\r\nimport MapCoordinates from \"../Engine/MapCoordinates\";\r\nimport Box from \"../GameObjects/Box\";\r\nimport GameObjectCollection from \"./GameObjectCollection\";\r\nimport GameObject from \"../GameObjects/GameObject\";\r\n\r\nclass Field {\r\n    public size: number;\r\n    public gameObjects: GameObjectCollection;\r\n    private htmlSize: number = 600;\r\n    private canvasHtmlElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n    private cellSize: number;\r\n\r\n    public constructor(size: number) {\r\n        this.canvasHtmlElement = <HTMLCanvasElement>document.getElementById(\"field\");\r\n        this.context = this.canvasHtmlElement.getContext(\"2d\");\r\n        this.canvasHtmlElement.setAttribute(\"width\", this.htmlSize.toString());\r\n        this.canvasHtmlElement.setAttribute(\"height\", this.htmlSize.toString());\r\n        this.cellSize = this.htmlSize / size;\r\n\r\n        this.size = size;\r\n        this.gameObjects = new GameObjectCollection(this.size);\r\n    }\r\n\r\n    public randomize() {\r\n        for (let y = 0; y < this.size; y++) {\r\n            for (let x = 0; x < this.size; x++) {\r\n                let r = Random.next(0, 20);\r\n                if (r > 15) {\r\n                    let currCoords = new MapCoordinates(x, y);\r\n                    this.gameObjects.add(new Box(currCoords));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getObjectByCoordinates(coords: MapCoordinates) : GameObject {\r\n        return this.gameObjects.getObject(coords);\r\n    }\r\n\r\n    public deleteObjectByCoordinates(coords: MapCoordinates) {\r\n        this.gameObjects.removeByCoordinates(coords);\r\n    }\r\n\r\n    public render() {\r\n        this.context.fillStyle = \"#f6f6f6\";\r\n        this.context.fillRect(0, 0, this.htmlSize, this.htmlSize);\r\n        for (let gameObject of this.gameObjects.toArray()) {\r\n            if (gameObject == undefined) {\r\n                continue;\r\n            }\r\n            this.context.fillStyle = gameObject.color;\r\n\r\n            this.fillRect(gameObject.coordinates.x, gameObject.coordinates.y);\r\n        }\r\n    }\r\n\r\n    private fillRect(x: number, y: number) {\r\n        this.context.fillRect(x * this.cellSize, y * this.cellSize, this.cellSize, this.cellSize);\r\n    }\r\n\r\n    public makeWall() {\r\n        for (let y = 0; y < this.size; y++) {\r\n            for (let x = 0; x < this.size; x++) {\r\n                let isWall = 0;\r\n                if (x == Math.round(this.size / 2) && y < Math.round(this.size / 2) ||\r\n                    (y == Math.round(this.size / 2) && x < Math.round(this.size / 2))) {\r\n                    var coords = new MapCoordinates(x, y);\r\n                    this.gameObjects.add((new Box(coords)));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // public showNodes(nodes: PathNode[]) {\r\n    //     for (let node of nodes) {\r\n    //         this.cells[node.getCoordinates().y][node.getCoordinates().x] = 3;\r\n    //     }\r\n    // }\r\n}\r\n\r\nexport default Field;","import GameObject from \"../GameObjects/GameObject\";\r\nimport MapCoordinates from \"../Engine/MapCoordinates\";\r\nimport BinaryTree from \"../DataStructure/BinaryTree/BinaryTree\";\r\n\r\nclass GameObjectCollection {\r\n    private array: GameObject[];\r\n    private fieldSize: number;\r\n\r\n    constructor(fielSize: number) {\r\n        this.array = [];\r\n        this.fieldSize = fielSize;\r\n    }\r\n\r\n    public getObject(coords: MapCoordinates): GameObject {\r\n        let item = this.array[coords.x + coords.y * this.fieldSize];\r\n        if (item == undefined)\r\n            return null;\r\n        return item;\r\n    }\r\n\r\n    public add(gameObject: GameObject) {\r\n        this.array[gameObject.coordinates.x + gameObject.coordinates.y *this.fieldSize] = gameObject;\r\n    }\r\n\r\n    public removeByCoordinates(coords: MapCoordinates): void {\r\n        this.array[coords.x + coords.y * this.fieldSize] = undefined;\r\n    }\r\n\r\n    public move(from: MapCoordinates, to: MapCoordinates) {\r\n        this.array[to.x + to.y * this.fieldSize] = this.array[from.x + from.y * this.fieldSize];\r\n        this.removeByCoordinates(from);\r\n    }\r\n\r\n    public toArray() : GameObject[] {\r\n        return this.array;\r\n    }\r\n}\r\n\r\nexport default GameObjectCollection;","import MapCoordinates from \"../Engine/MapCoordinates\";\r\nimport GameObject from \"./GameObject\";\r\n\r\nclass Box implements GameObject {\r\n    public coordinates: MapCoordinates;\r\n    public color: string = \"black\";\r\n    public isImpenetrable: boolean = false;\r\n\r\n    constructor(coordinates: MapCoordinates) {\r\n        this.coordinates = coordinates;\r\n    }\r\n}\r\n\r\nexport default Box;","import MapCoordinates from \"../Engine/MapCoordinates\";\r\nimport GameObject from \"./GameObject\";\r\n\r\nclass DeadMan implements GameObject {\r\n    color: string = \"blueviolet\";\r\n    coordinates: MapCoordinates;\r\n    public isImpenetrable: boolean = false;\r\n\r\n    constructor(coords: MapCoordinates) {\r\n        this.coordinates = coords;\r\n    }\r\n}\r\n\r\nexport default DeadMan;","import MapCoordinates from \"../Engine/MapCoordinates\";\r\nimport PathFinder from \"../Engine/PathFinder\";\r\nimport Field from \"../Environment/Field\";\r\nimport GameObject from \"./GameObject\";\r\nimport {TickInMiliseconds} from \"../GlobalVariables\";\r\nimport DeadMan from \"./DeadMan\";\r\n\r\nclass Enemy implements GameObject {\r\n    public isImpenetrable: boolean = true;\r\n    public coordinates: MapCoordinates;\r\n    public color: string = \"red\";\r\n    private path: MapCoordinates[];\r\n    private pathFinder: PathFinder;\r\n    private currentStep: number;\r\n    private field: Field;\r\n    private interval: number;\r\n\r\n    constructor(coordinates: MapCoordinates, field: Field) {\r\n        this.coordinates = coordinates;\r\n        this.pathFinder = new PathFinder(field);\r\n        this.field = field;\r\n    }\r\n\r\n    public calculatePath(toCoordinates: MapCoordinates, isIgnoreEnemy: boolean = true) {\r\n        this.currentStep = 0;\r\n        this.path = this.pathFinder.findPath(this.coordinates, toCoordinates, isIgnoreEnemy);\r\n        if (this.path == null) {\r\n            throw \"end game\";\r\n        }\r\n    }\r\n\r\n    public step() {\r\n        let nextStepCoords = this.path[this.currentStep + 1];\r\n        let nextObject =this.field.getObjectByCoordinates(this.path[this.currentStep + 1]);\r\n        if (nextObject instanceof Enemy || nextObject instanceof DeadMan)\r\n        {\r\n            console.log(\"there is enemy\");\r\n            return false;\r\n        }\r\n        if (this.currentStep == this.path.length - 2) {\r\n            clearInterval(this.interval);\r\n            this.death();\r\n            console.log(\"dead\");\r\n            return;\r\n        }\r\n        this.field.gameObjects.move(this.coordinates, nextStepCoords);\r\n        this.coordinates = nextStepCoords;\r\n        this.currentStep++;\r\n        return true;\r\n    }\r\n\r\n    public goTo(coords: MapCoordinates) {\r\n        this.calculatePath(coords);\r\n        this.interval = setInterval(this.everyInterval.bind(this), TickInMiliseconds);\r\n    }\r\n\r\n    public follow(obj: GameObject) {\r\n        this.calculatePath(obj.coordinates);\r\n        let oldCoordinates = obj.coordinates;\r\n        this.interval = setInterval(() => {\r\n            if (obj.coordinates.toString() != oldCoordinates.toString()) {\r\n                oldCoordinates = obj.coordinates;\r\n                this.calculatePath(obj.coordinates);\r\n            }\r\n            if (!this.step()) {\r\n                this.calculatePath(obj.coordinates, false);\r\n            }\r\n        }, TickInMiliseconds)\r\n    }\r\n\r\n    private everyInterval() {\r\n        console.log(\"moved\");\r\n        this.step();\r\n    }\r\n\r\n    private death() {\r\n        let deathCoords = this.coordinates;\r\n        this.field.gameObjects.removeByCoordinates(this.coordinates);\r\n        let body = new DeadMan(deathCoords);\r\n        this.field.gameObjects.add(body);\r\n    }\r\n}\r\n\r\nexport default Enemy;","import MapCoordinates from \"../Engine/MapCoordinates\";\r\nimport Field from \"../Environment/Field\";\r\nimport GameObject from \"./GameObject\";\r\n\r\nclass Player implements GameObject {\r\n\r\n    public coordinates: MapCoordinates;\r\n    protected field: Field;\r\n    public color: string = \"green\";\r\n    public isImpenetrable: boolean = true;\r\n\r\n    constructor(coords: MapCoordinates, field: Field) {\r\n        this.coordinates = coords;\r\n        this.field = field;\r\n    }\r\n\r\n    public moveBottom() {\r\n        this.move(\"bottom\");\r\n    }\r\n\r\n    public moveUp() {\r\n        this.move(\"up\");\r\n    }\r\n\r\n    public moveLeft() {\r\n        this.move(\"left\");\r\n    }\r\n\r\n    public moveRight() {\r\n        this.move(\"right\");\r\n    }\r\n\r\n    private move(direction: string) {\r\n        let supposedCoordinates: MapCoordinates;\r\n        switch (direction) {\r\n            case \"up\":\r\n                supposedCoordinates = new MapCoordinates(this.coordinates.x, this.coordinates.y - 1);\r\n                break;\r\n            case \"bottom\":\r\n                supposedCoordinates = new MapCoordinates(this.coordinates.x, this.coordinates.y + 1);\r\n                break;\r\n            case \"left\":\r\n                supposedCoordinates = new MapCoordinates(this.coordinates.x - 1, this.coordinates.y);\r\n                break;\r\n            case \"right\":\r\n                supposedCoordinates = new MapCoordinates(this.coordinates.x + 1, this.coordinates.y);\r\n                break;\r\n            default:\r\n                throw \"direction not parsed\";\r\n        }\r\n\r\n        if (!this.isExisOnTheField(supposedCoordinates))\r\n            return;\r\n\r\n        if (this.field.getObjectByCoordinates(supposedCoordinates) != null)\r\n            return;\r\n\r\n        this.field.gameObjects.move(this.coordinates, supposedCoordinates);\r\n        this.coordinates = supposedCoordinates;\r\n    }\r\n\r\n    private isExisOnTheField(coords: MapCoordinates): boolean {\r\n        return !(coords.x >= this.field.size || coords.y >= this.field.size\r\n            || coords.x < 0 || coords.y < 0);\r\n    }\r\n}\r\n\r\nexport default Player;","export const TickInMiliseconds = 100;","class Random {\r\n    public static next(min:number, max:number) {\r\n        return Math.round(Math.random() * (max - min)) + min;\r\n    }\r\n}\r\n\r\nexport default Random;","// removed by extract-text-webpack-plugin"],"sourceRoot":""}